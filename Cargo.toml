[package]
name = "pdbtbx"
version = "0.9.1"
authors = ["Douwe Schulte <d.schulte@uu.nl>"]
license = "MIT"
edition = "2018"
description = "A library to open/edit/save (crystallographic) Protein Data Bank (PDB) and mmCIF files."
repository = "https://github.com/douweschulte/pdbtbx"
readme = "README.md"
keywords = ["pdb", "crystal", "protein", "mmcif", "bio"]
categories = ["parser-implementations", "science"]
include = ["src/**/*", "LICENSE", "README.md"]

[dependencies]
rstar = { version = "^0.9.2", optional = true}
serde = { version = "~1.0", optional = true, features = ["derive"] }
rayon = {version = "^1", optional = true}
doc-cfg = "0.1"
indexmap = "^1.8"
stringreader = "0.1.1"
pdbtbx = "0.9.1"
wasm-bindgen = "0.2.63"

# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = { version = "0.1.6", optional = true }

# `wee_alloc` is a tiny allocator for wasm that is only ~1K in code size
# compared to the default allocator's ~10K. It is slower than the default
# allocator, however.
#
# Unfortunately, `wee_alloc` requires nightly Rust when targeting wasm for now.
wee_alloc = { version = "0.4.5", optional = true }

[dev-dependencies]
serde_json = "~1.0"
wasm-bindgen-test = "0.3.13"

[features]
default = ["rayon", "rstar", "serde"]
unstable-doc-cfg = []

[package.metadata.docs.rs]
all-features = true

[profile.dev]
opt-level = 3

[[bench]]
name = "benchmark"
harness = false
path = "benches/benchmark.rs"

[lib]
crate-type = ["cdylib", "rlib"]

[profile.release]
# Tell `rustc` to optimize for small code size.
opt-level = "s"
